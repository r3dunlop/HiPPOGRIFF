//
// File generated by rootcint at Wed Aug  6 11:32:44 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MidUnpackDictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MidUnpackDictionary.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TGriffinFragment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGriffinFragment(void *p = 0);
   static void *newArray_TGriffinFragment(Long_t size, void *p);
   static void delete_TGriffinFragment(void *p);
   static void deleteArray_TGriffinFragment(void *p);
   static void destruct_TGriffinFragment(void *p);
   static void streamer_TGriffinFragment(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGriffinFragment*)
   {
      ::TGriffinFragment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGriffinFragment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGriffinFragment", ::TGriffinFragment::Class_Version(), "./TGriffinFragment.hh", 32,
                  typeid(::TGriffinFragment), DefineBehavior(ptr, ptr),
                  &::TGriffinFragment::Dictionary, isa_proxy, 0,
                  sizeof(::TGriffinFragment) );
      instance.SetNew(&new_TGriffinFragment);
      instance.SetNewArray(&newArray_TGriffinFragment);
      instance.SetDelete(&delete_TGriffinFragment);
      instance.SetDeleteArray(&deleteArray_TGriffinFragment);
      instance.SetDestructor(&destruct_TGriffinFragment);
      instance.SetStreamerFunc(&streamer_TGriffinFragment);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGriffinFragment*)
   {
      return GenerateInitInstanceLocal((::TGriffinFragment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGriffinFragment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFragmentQueue_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFragmentQueue(void *p = 0);
   static void *newArray_TFragmentQueue(Long_t size, void *p);
   static void delete_TFragmentQueue(void *p);
   static void deleteArray_TFragmentQueue(void *p);
   static void destruct_TFragmentQueue(void *p);
   static void streamer_TFragmentQueue(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFragmentQueue*)
   {
      ::TFragmentQueue *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFragmentQueue >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFragmentQueue", ::TFragmentQueue::Class_Version(), "./TFragmentQueue.hh", 27,
                  typeid(::TFragmentQueue), DefineBehavior(ptr, ptr),
                  &::TFragmentQueue::Dictionary, isa_proxy, 0,
                  sizeof(::TFragmentQueue) );
      instance.SetNew(&new_TFragmentQueue);
      instance.SetNewArray(&newArray_TFragmentQueue);
      instance.SetDelete(&delete_TFragmentQueue);
      instance.SetDeleteArray(&deleteArray_TFragmentQueue);
      instance.SetDestructor(&destruct_TFragmentQueue);
      instance.SetStreamerFunc(&streamer_TFragmentQueue);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFragmentQueue*)
   {
      return GenerateInitInstanceLocal((::TFragmentQueue*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFragmentQueue*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TGriffinFragment::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGriffinFragment::Class_Name()
{
   return "TGriffinFragment";
}

//______________________________________________________________________________
const char *TGriffinFragment::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGriffinFragment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGriffinFragment::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGriffinFragment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGriffinFragment::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGriffinFragment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGriffinFragment::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGriffinFragment*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFragmentQueue::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFragmentQueue::Class_Name()
{
   return "TFragmentQueue";
}

//______________________________________________________________________________
const char *TFragmentQueue::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFragmentQueue*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFragmentQueue::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFragmentQueue*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFragmentQueue::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFragmentQueue*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFragmentQueue::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFragmentQueue*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TGriffinFragment::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGriffinFragment.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hitNumber;
      R__b >> ppg;
      R__b >> deadTime;
      R__b >> detectorType;
      R__b >> numberFilters;
      R__b >> timeStampLow;
      R__b >> timeStampHigh;
      R__b >> filterId;
      R__b >> filterPattern;
      R__b >> chargeCal;
      R__b >> timeToTrig;
      R__b >> kHigh;
      R__b >> kLow;
      R__b >> k;
      R__b >> numberPileups;
      R__b >> midasTimeStamp;
      R__b >> midasId;
      R__b >> triggerId;
      R__b >> fragmentId;
      R__b >> triggerBitPattern;
      R__b >> channelAddress;
      R__b >> cfd;
      R__b >> charge;
      R__b >> timeStamp;
      {
         vector<uint32_t> &R__stl =  wavebuffer;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> odbType;
      { TString R__str; R__str.Streamer(R__b); channelName = R__str.Data(); }
      R__b >> channelNumber;
      R__b >> dataType;
      { TString R__str; R__str.Streamer(R__b); digitizerType = R__str.Data(); }
      R__b.CheckByteCount(R__s, R__c, TGriffinFragment::IsA());
   } else {
      R__c = R__b.WriteVersion(TGriffinFragment::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << hitNumber;
      R__b << ppg;
      R__b << deadTime;
      R__b << detectorType;
      R__b << numberFilters;
      R__b << timeStampLow;
      R__b << timeStampHigh;
      R__b << filterId;
      R__b << filterPattern;
      R__b << chargeCal;
      R__b << timeToTrig;
      R__b << kHigh;
      R__b << kLow;
      R__b << k;
      R__b << numberPileups;
      R__b << midasTimeStamp;
      R__b << midasId;
      R__b << triggerId;
      R__b << fragmentId;
      R__b << triggerBitPattern;
      R__b << channelAddress;
      R__b << cfd;
      R__b << charge;
      R__b << timeStamp;
      {
         vector<uint32_t> &R__stl =  wavebuffer;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<uint32_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << odbType;
      { TString R__str = channelName.c_str(); R__str.Streamer(R__b);}
      R__b << channelNumber;
      R__b << dataType;
      { TString R__str = digitizerType.c_str(); R__str.Streamer(R__b);}
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TGriffinFragment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGriffinFragment.
      TClass *R__cl = ::TGriffinFragment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitNumber", &hitNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppg", &ppg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deadTime", &deadTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorType", &detectorType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberFilters", &numberFilters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeStampLow", &timeStampLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeStampHigh", &timeStampHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "filterId", &filterId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "filterPattern", &filterPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargeCal", &chargeCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeToTrig", &timeToTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kHigh", &kHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kLow", &kLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "k", &k);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberPileups", &numberPileups);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "midasTimeStamp", &midasTimeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "midasId", &midasId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerId", &triggerId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fragmentId", &fragmentId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerBitPattern", &triggerBitPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelAddress", &channelAddress);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cfd", &cfd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeStamp", &timeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wavebuffer", (void*)&wavebuffer);
      R__insp.InspectMember("vector<uint32_t>", (void*)&wavebuffer, "wavebuffer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "odbType", &odbType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelName", (void*)&channelName);
      R__insp.InspectMember("string", (void*)&channelName, "channelName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelNumber", &channelNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dataType", &dataType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digitizerType", (void*)&digitizerType);
      R__insp.InspectMember("string", (void*)&digitizerType, "digitizerType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "header_flag", &header_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelTrigger_flag", &channelTrigger_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deadtime_flag", &deadtime_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trailer_flag", &trailer_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "badfrag_flag", &badfrag_flag);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGriffinFragment(void *p) {
      return  p ? new(p) ::TGriffinFragment : new ::TGriffinFragment;
   }
   static void *newArray_TGriffinFragment(Long_t nElements, void *p) {
      return p ? new(p) ::TGriffinFragment[nElements] : new ::TGriffinFragment[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGriffinFragment(void *p) {
      delete ((::TGriffinFragment*)p);
   }
   static void deleteArray_TGriffinFragment(void *p) {
      delete [] ((::TGriffinFragment*)p);
   }
   static void destruct_TGriffinFragment(void *p) {
      typedef ::TGriffinFragment current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TGriffinFragment(TBuffer &buf, void *obj) {
      ((::TGriffinFragment*)obj)->::TGriffinFragment::Streamer(buf);
   }
} // end of namespace ROOT for class ::TGriffinFragment

//______________________________________________________________________________
void TFragmentQueue::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFragmentQueue.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TFragmentQueue::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFragmentQueue.
      TClass *R__cl = ::TFragmentQueue::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFragmentQueue", (void*)&fFragmentQueue);
      R__insp.InspectMember("queue<TGriffinFragment*>", (void*)&fFragmentQueue, "fFragmentQueue.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFragsInQueue", &fFragsInQueue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFragmentStorage", &fFragmentStorage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatusUpdateOn", &fStatusUpdateOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStop", &fStop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fragments_in", &fragments_in);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fragments_out", &fragments_out);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sw", &sw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalFragsIn", &fTotalFragsIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalFragsOut", &fTotalFragsOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fragment_id_map", (void*)&fragment_id_map);
      R__insp.InspectMember("map<int,int>", (void*)&fragment_id_map, "fragment_id_map.", false);
      R__insp.GenericShowMembers("Multiton<TFragmentQueue,string>", ( ::Multiton<TFragmentQueue,string> *) (this ), false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFragmentQueue(void *p) {
      return  p ? new(p) ::TFragmentQueue : new ::TFragmentQueue;
   }
   static void *newArray_TFragmentQueue(Long_t nElements, void *p) {
      return p ? new(p) ::TFragmentQueue[nElements] : new ::TFragmentQueue[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFragmentQueue(void *p) {
      delete ((::TFragmentQueue*)p);
   }
   static void deleteArray_TFragmentQueue(void *p) {
      delete [] ((::TFragmentQueue*)p);
   }
   static void destruct_TFragmentQueue(void *p) {
      typedef ::TFragmentQueue current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TFragmentQueue(TBuffer &buf, void *obj) {
      ((::TFragmentQueue*)obj)->::TFragmentQueue::Streamer(buf);
   }
} // end of namespace ROOT for class ::TFragmentQueue

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

/********************************************************
* MidUnpackDictionary.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMidUnpackDictionary();

extern "C" void G__set_cpp_environmentMidUnpackDictionary() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TGriffinFragment.hh");
  G__add_compiledheader("TFragmentQueue.hh");
  G__cpp_reset_tagtableMidUnpackDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevMidUnpackDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGriffinFragment */
static int G__MidUnpackDictionary_445_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGriffinFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGriffinFragment[n];
     } else {
       p = new((void*) gvp) TGriffinFragment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGriffinFragment;
     } else {
       p = new((void*) gvp) TGriffinFragment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGriffinFragment*) G__getstructoffset())->SetTimeStamp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGriffinFragment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGriffinFragment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGriffinFragment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGriffinFragment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGriffinFragment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGriffinFragment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGriffinFragment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGriffinFragment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_445_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGriffinFragment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MidUnpackDictionary_445_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGriffinFragment* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGriffinFragment(*(TGriffinFragment*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGriffinFragment G__TTGriffinFragment;
static int G__MidUnpackDictionary_445_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGriffinFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGriffinFragment*) (soff+(sizeof(TGriffinFragment)*i)))->~G__TTGriffinFragment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGriffinFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGriffinFragment*) (soff))->~G__TTGriffinFragment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MidUnpackDictionary_445_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGriffinFragment* dest = (TGriffinFragment*) G__getstructoffset();
   *dest = *(TGriffinFragment*) libp->para[0].ref;
   const TGriffinFragment& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFragmentQueue */
static int G__MidUnpackDictionary_484_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFragmentQueue* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFragmentQueue[n];
     } else {
       p = new((void*) gvp) TFragmentQueue[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFragmentQueue;
     } else {
       p = new((void*) gvp) TFragmentQueue;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TFragmentQueue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFragmentQueue*) G__getstructoffset())->Add((TGriffinFragment*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TFragmentQueue*) G__getstructoffset())->Get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TFragmentQueue*) G__getstructoffset())->GetFront());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TFragmentQueue*) G__getstructoffset())->PopFragment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TFragmentQueue*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFragmentQueue*) G__getstructoffset())->StartStatusUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFragmentQueue*) G__getstructoffset())->StopStatusUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFragmentQueue*) G__getstructoffset())->CheckStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TFragmentQueue*) G__getstructoffset())->GetTotalFragsIn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TFragmentQueue*) G__getstructoffset())->GetTotalFragsOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TFragmentQueue*) G__getstructoffset())->Running());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFragmentQueue*) G__getstructoffset())->Stop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFragmentQueue*) G__getstructoffset())->AddToQueue((TGriffinFragment*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFragmentQueue::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFragmentQueue::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFragmentQueue::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFragmentQueue::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFragmentQueue*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFragmentQueue::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFragmentQueue::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFragmentQueue::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MidUnpackDictionary_484_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFragmentQueue::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFragmentQueue G__TTFragmentQueue;
static int G__MidUnpackDictionary_484_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFragmentQueue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFragmentQueue*) (soff+(sizeof(TFragmentQueue)*i)))->~G__TTFragmentQueue();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFragmentQueue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFragmentQueue*) (soff))->~G__TTFragmentQueue();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGriffinFragment */

/* TFragmentQueue */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMidUnpackDictionary {
 public:
  G__Sizep2memfuncMidUnpackDictionary(): p(&G__Sizep2memfuncMidUnpackDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMidUnpackDictionary::*p)();
};

size_t G__get_sizep2memfuncMidUnpackDictionary()
{
  G__Sizep2memfuncMidUnpackDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMidUnpackDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment))) {
     TGriffinFragment *G__Lderived;
     G__Lderived=(TGriffinFragment*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment),G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TFragmentQueue))) {
     TFragmentQueue *G__Lderived;
     G__Lderived=(TFragmentQueue*)0x1000;
     {
       Multiton<TFragmentQueue,string> *G__Lpbase=(Multiton<TFragmentQueue,string>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TFragmentQueue),G__get_linked_tagnum(&G__MidUnpackDictionaryLN_MultitonlETFragmentQueuecOstringgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TFragmentQueue),G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMidUnpackDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<uint32_t>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Multiton<TFragmentQueue>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_MultitonlETFragmentQueuecOstringgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TFragmentQueue*>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_maplEstringcOTFragmentQueuemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTFragmentQueuemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TFragmentQueue*,less<string> >",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_maplEstringcOTFragmentQueuemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTFragmentQueuemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TGriffinFragment*>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_dequelETGriffinFragmentmUcOallocatorlETGriffinFragmentmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<TGriffinFragment*>",117,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_queuelETGriffinFragmentmUcOdequelETGriffinFragmentmUcOallocatorlETGriffinFragmentmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGriffinFragment */
static void G__setup_memvarTGriffinFragment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment));
   { TGriffinFragment *p; p=(TGriffinFragment*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hitNumber)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"hitNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppg)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"ppg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deadTime)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"deadTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detectorType)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"detectorType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numberFilters)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"numberFilters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeStampLow)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"timeStampLow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeStampHigh)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"timeStampHigh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->filterId)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"filterId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->filterPattern)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"filterPattern=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargeCal)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"chargeCal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeToTrig)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"timeToTrig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kHigh)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"kHigh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kLow)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"kLow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"k=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numberPileups)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"numberPileups=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->midasTimeStamp)-(long)(p)),109,0,0,-1,G__defined_typename("uint64_t"),-1,1,"midasTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->midasId)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"midasId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerId)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"triggerId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fragmentId)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"fragmentId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerBitPattern)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"triggerBitPattern=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->channelAddress)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"channelAddress=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cfd)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"cfd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeStamp)-(long)(p)),109,0,0,-1,G__defined_typename("uint64_t"),-1,1,"timeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wavebuffer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<uint32_t>"),-1,1,"wavebuffer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->odbType)-(long)(p)),115,0,0,-1,-1,-1,1,"odbType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->channelName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_string),-1,-1,1,"channelName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->channelNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"channelNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dataType)-(long)(p)),115,0,0,-1,-1,-1,1,"dataType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->digitizerType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_string),-1,-1,1,"digitizerType=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"header_flag=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"channelTrigger_flag=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"deadtime_flag=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"trailer_flag=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"badfrag_flag=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFragmentQueue */
static void G__setup_memvarTFragmentQueue(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TFragmentQueue));
   { TFragmentQueue *p; p=(TFragmentQueue*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_queuelETGriffinFragmentmUcOdequelETGriffinFragmentmUcOallocatorlETGriffinFragmentmUgRsPgRsPgR),G__defined_typename("queue<TGriffinFragment*>"),-1,4,"fFragmentQueue=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fFragsInQueue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TObjArray),-1,-1,4,"fFragmentStorage=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fStatusUpdateOn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fStop=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fragments_in=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fragments_out=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TStopwatch),-1,-1,4,"sw=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fTotalFragsIn=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fTotalFragsOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fragment_id_map=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMidUnpackDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGriffinFragment(void) {
   /* TGriffinFragment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment));
   G__memfunc_setup("TGriffinFragment",1613,G__MidUnpackDictionary_445_0_1, 105, G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", "!", (void*) NULL, 1);
   G__memfunc_setup("SetTimeStamp",1216,G__MidUnpackDictionary_445_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "!", (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", "!", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MidUnpackDictionary_445_0_5, 85, G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGriffinFragment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MidUnpackDictionary_445_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGriffinFragment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MidUnpackDictionary_445_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGriffinFragment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MidUnpackDictionary_445_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGriffinFragment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MidUnpackDictionary_445_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MidUnpackDictionary_445_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGriffinFragment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MidUnpackDictionary_445_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGriffinFragment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MidUnpackDictionary_445_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGriffinFragment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MidUnpackDictionary_445_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGriffinFragment::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGriffinFragment", 1613, G__MidUnpackDictionary_445_0_17, (int) ('i'), G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment), -1, 0, 1, 1, 1, 0, "u 'TGriffinFragment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGriffinFragment", 1739, G__MidUnpackDictionary_445_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MidUnpackDictionary_445_0_19, (int) ('u'), G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment), -1, 1, 1, 1, 1, 0, "u 'TGriffinFragment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFragmentQueue(void) {
   /* TFragmentQueue */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TFragmentQueue));
   G__memfunc_setup("TFragmentQueue",1421,G__MidUnpackDictionary_484_0_1, 105, G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TFragmentQueue), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StatusUpdate",1255,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetRateCounter",1647,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__MidUnpackDictionary_484_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGriffinFragment' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__MidUnpackDictionary_484_0_5, 85, G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFront",809,G__MidUnpackDictionary_484_0_6, 85, G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pop",303,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PopFragment",1123,G__MidUnpackDictionary_484_0_8, 85, G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TGriffinFragment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__MidUnpackDictionary_484_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartStatusUpdate",1781,G__MidUnpackDictionary_484_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StopStatusUpdate",1677,G__MidUnpackDictionary_484_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckStatus",1122,G__MidUnpackDictionary_484_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalFragsIn",1486,G__MidUnpackDictionary_484_0_13, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalFragsOut",1615,G__MidUnpackDictionary_484_0_14, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Running",737,G__MidUnpackDictionary_484_0_15, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Stop",422,G__MidUnpackDictionary_484_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddToQueue",977,G__MidUnpackDictionary_484_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGriffinFragment' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MidUnpackDictionary_484_0_19, 85, G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFragmentQueue::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MidUnpackDictionary_484_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFragmentQueue::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MidUnpackDictionary_484_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFragmentQueue::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MidUnpackDictionary_484_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFragmentQueue::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MidUnpackDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MidUnpackDictionary_484_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MidUnpackDictionary_484_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFragmentQueue::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MidUnpackDictionary_484_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFragmentQueue::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MidUnpackDictionary_484_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFragmentQueue::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MidUnpackDictionary_484_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFragmentQueue::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFragmentQueue", 1547, G__MidUnpackDictionary_484_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMidUnpackDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMidUnpackDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMidUnpackDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MidUnpackDictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_TGriffinFragment = { "TGriffinFragment" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_TFragmentQueue = { "TFragmentQueue" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_MultitonlETFragmentQueuecOstringgR = { "Multiton<TFragmentQueue,string>" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_maplEstringcOTFragmentQueuemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTFragmentQueuemUgRsPgRsPgR = { "map<string,TFragmentQueue*,less<string>,allocator<pair<const string,TFragmentQueue*> > >" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_dequelETGriffinFragmentmUcOallocatorlETGriffinFragmentmUgRsPgR = { "deque<TGriffinFragment*,allocator<TGriffinFragment*> >" , 99 , -1 };
G__linked_taginfo G__MidUnpackDictionaryLN_queuelETGriffinFragmentmUcOdequelETGriffinFragmentmUcOallocatorlETGriffinFragmentmUgRsPgRsPgR = { "queue<TGriffinFragment*,deque<TGriffinFragment*,allocator<TGriffinFragment*> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMidUnpackDictionary() {
  G__MidUnpackDictionaryLN_TClass.tagnum = -1 ;
  G__MidUnpackDictionaryLN_TBuffer.tagnum = -1 ;
  G__MidUnpackDictionaryLN_TMemberInspector.tagnum = -1 ;
  G__MidUnpackDictionaryLN_TObject.tagnum = -1 ;
  G__MidUnpackDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_string.tagnum = -1 ;
  G__MidUnpackDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_TObjArray.tagnum = -1 ;
  G__MidUnpackDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_TGriffinFragment.tagnum = -1 ;
  G__MidUnpackDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_TStopwatch.tagnum = -1 ;
  G__MidUnpackDictionaryLN_TFragmentQueue.tagnum = -1 ;
  G__MidUnpackDictionaryLN_MultitonlETFragmentQueuecOstringgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_maplEstringcOTFragmentQueuemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTFragmentQueuemUgRsPgRsPgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_dequelETGriffinFragmentmUcOallocatorlETGriffinFragmentmUgRsPgR.tagnum = -1 ;
  G__MidUnpackDictionaryLN_queuelETGriffinFragmentmUcOdequelETGriffinFragmentmUcOallocatorlETGriffinFragmentmUgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMidUnpackDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_string);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_TGriffinFragment),sizeof(TGriffinFragment),-1,29952,(char*)NULL,G__setup_memvarTGriffinFragment,G__setup_memfuncTGriffinFragment);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_TStopwatch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_TFragmentQueue),sizeof(TFragmentQueue),-1,29952,(char*)NULL,G__setup_memvarTFragmentQueue,G__setup_memfuncTFragmentQueue);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_MultitonlETFragmentQueuecOstringgR);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_maplEstringcOTFragmentQueuemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTFragmentQueuemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_dequelETGriffinFragmentmUcOallocatorlETGriffinFragmentmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MidUnpackDictionaryLN_queuelETGriffinFragmentmUcOdequelETGriffinFragmentmUcOallocatorlETGriffinFragmentmUgRsPgRsPgR);
}
extern "C" void G__cpp_setupMidUnpackDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupMidUnpackDictionary()");
  G__set_cpp_environmentMidUnpackDictionary();
  G__cpp_setup_tagtableMidUnpackDictionary();

  G__cpp_setup_inheritanceMidUnpackDictionary();

  G__cpp_setup_typetableMidUnpackDictionary();

  G__cpp_setup_memvarMidUnpackDictionary();

  G__cpp_setup_memfuncMidUnpackDictionary();
  G__cpp_setup_globalMidUnpackDictionary();
  G__cpp_setup_funcMidUnpackDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMidUnpackDictionary();
  return;
}
class G__cpp_setup_initMidUnpackDictionary {
  public:
    G__cpp_setup_initMidUnpackDictionary() { G__add_setup_func("MidUnpackDictionary",(G__incsetup)(&G__cpp_setupMidUnpackDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMidUnpackDictionary() { G__remove_setup_func("MidUnpackDictionary"); }
};
G__cpp_setup_initMidUnpackDictionary G__cpp_setup_initializerMidUnpackDictionary;

