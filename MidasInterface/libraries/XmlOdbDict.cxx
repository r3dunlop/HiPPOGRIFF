//
// File generated by rootcint at Wed Jun 25 13:49:27 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME XmlOdbDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "XmlOdbDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void XmlOdb_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_XmlOdb(void *p);
   static void deleteArray_XmlOdb(void *p);
   static void destruct_XmlOdb(void *p);
   static void streamer_XmlOdb(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::XmlOdb*)
   {
      ::XmlOdb *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::XmlOdb >(0);
      static ::ROOT::TGenericClassInfo 
         instance("XmlOdb", ::XmlOdb::Class_Version(), "./../include/XmlOdb.h", 31,
                  typeid(::XmlOdb), DefineBehavior(ptr, ptr),
                  &::XmlOdb::Dictionary, isa_proxy, 0,
                  sizeof(::XmlOdb) );
      instance.SetDelete(&delete_XmlOdb);
      instance.SetDeleteArray(&deleteArray_XmlOdb);
      instance.SetDestructor(&destruct_XmlOdb);
      instance.SetStreamerFunc(&streamer_XmlOdb);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::XmlOdb*)
   {
      return GenerateInitInstanceLocal((::XmlOdb*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::XmlOdb*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *XmlOdb::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *XmlOdb::Class_Name()
{
   return "XmlOdb";
}

//______________________________________________________________________________
const char *XmlOdb::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::XmlOdb*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int XmlOdb::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::XmlOdb*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void XmlOdb::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::XmlOdb*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *XmlOdb::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::XmlOdb*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void XmlOdb::Streamer(TBuffer &R__b)
{
   // Stream an object of class XmlOdb.

   ::Error("XmlOdb::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void XmlOdb::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class XmlOdb.
      TClass *R__cl = ::XmlOdb::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParser", &fParser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOdb", &fOdb);
      R__insp.GenericShowMembers("VirtualOdb", ( ::VirtualOdb *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_XmlOdb(void *p) {
      delete ((::XmlOdb*)p);
   }
   static void deleteArray_XmlOdb(void *p) {
      delete [] ((::XmlOdb*)p);
   }
   static void destruct_XmlOdb(void *p) {
      typedef ::XmlOdb current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_XmlOdb(TBuffer &buf, void *obj) {
      ((::XmlOdb*)obj)->::XmlOdb::Streamer(buf);
   }
} // end of namespace ROOT for class ::XmlOdb

/********************************************************
* XmlOdbDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableXmlOdbDict();

extern "C" void G__set_cpp_environmentXmlOdbDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/XmlOdb.h");
  G__cpp_reset_tagtableXmlOdbDict();
}
#include <new>
extern "C" int G__cpp_dllrevXmlOdbDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* XmlOdb */
static int G__XmlOdbDict_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   XmlOdb* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new XmlOdb((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) XmlOdb((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   XmlOdb* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new XmlOdb((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) XmlOdb((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((XmlOdb*) G__getstructoffset())->FindNode((TXMLNode*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((XmlOdb*) G__getstructoffset())->DumpTree((TXMLNode*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((XmlOdb*) G__getstructoffset())->DumpTree((TXMLNode*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((XmlOdb*) G__getstructoffset())->DumpTree();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((XmlOdb*) G__getstructoffset())->DumpDirTree((TXMLNode*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((XmlOdb*) G__getstructoffset())->DumpDirTree((TXMLNode*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((XmlOdb*) G__getstructoffset())->DumpDirTree();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((XmlOdb*) G__getstructoffset())->GetAttrValue((TXMLNode*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((XmlOdb*) G__getstructoffset())->FindPath((TXMLNode*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((XmlOdb*) G__getstructoffset())->FindArrayPath((TXMLNode*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) XmlOdb::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) XmlOdb::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) XmlOdb::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      XmlOdb::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const XmlOdb*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((XmlOdb*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((XmlOdb*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((XmlOdb*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) XmlOdb::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) XmlOdb::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) XmlOdb::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__XmlOdbDict_223_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) XmlOdb::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__XmlOdbDict_223_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   XmlOdb* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new XmlOdb(*(XmlOdb*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef XmlOdb G__TXmlOdb;
static int G__XmlOdbDict_223_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (XmlOdb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((XmlOdb*) (soff+(sizeof(XmlOdb)*i)))->~G__TXmlOdb();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (XmlOdb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((XmlOdb*) (soff))->~G__TXmlOdb();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__XmlOdbDict_223_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   XmlOdb* dest = (XmlOdb*) G__getstructoffset();
   *dest = *(XmlOdb*) libp->para[0].ref;
   const XmlOdb& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* XmlOdb */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncXmlOdbDict {
 public:
  G__Sizep2memfuncXmlOdbDict(): p(&G__Sizep2memfuncXmlOdbDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncXmlOdbDict::*p)();
};

size_t G__get_sizep2memfuncXmlOdbDict()
{
  G__Sizep2memfuncXmlOdbDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceXmlOdbDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb))) {
     XmlOdb *G__Lderived;
     G__Lderived=(XmlOdb*)0x1000;
     {
       VirtualOdb *G__Lpbase=(VirtualOdb*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb),G__get_linked_tagnum(&G__XmlOdbDictLN_VirtualOdb),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableXmlOdbDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__XmlOdbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__XmlOdbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__XmlOdbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__XmlOdbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__XmlOdbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__XmlOdbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__XmlOdbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__XmlOdbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__XmlOdbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__XmlOdbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* XmlOdb */
static void G__setup_memvarXmlOdb(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb));
   { XmlOdb *p; p=(XmlOdb*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fParser)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__XmlOdbDictLN_TDOMParser),-1,-1,1,"fParser=",0,"/< XML parser for the XML-encoded ODB data");
   G__memvar_setup((void*)((long)(&p->fOdb)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__XmlOdbDictLN_TXMLNode),-1,-1,1,"fOdb=",0,"/< Pointer to the root of the ODB tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__XmlOdbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarXmlOdbDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncXmlOdb(void) {
   /* XmlOdb */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb));
   G__memfunc_setup("XmlOdb",582,G__XmlOdbDict_223_0_1, 105, G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb), -1, 0, 2, 1, 1, 0, 
"C - - 10 - buf i - - 0 - bufLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XmlOdb",582,G__XmlOdbDict_223_0_2, 105, G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb), -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNode",775,G__XmlOdbDict_223_0_3, 85, G__get_linked_tagnum(&G__XmlOdbDictLN_TXMLNode), -1, 0, 2, 1, 1, 0, 
"U 'TXMLNode' - 0 - node C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpTree",806,G__XmlOdbDict_223_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TXMLNode' - 0 'NULL' node i - - 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpDirTree",1093,G__XmlOdbDict_223_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TXMLNode' - 0 'NULL' node i - - 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttrValue",1208,G__XmlOdbDict_223_0_6, 67, -1, -1, 0, 2, 1, 1, 1, 
"U 'TXMLNode' - 0 - node C - - 10 - attrName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPath",782,G__XmlOdbDict_223_0_7, 85, G__get_linked_tagnum(&G__XmlOdbDictLN_TXMLNode), -1, 0, 2, 1, 1, 0, 
"U 'TXMLNode' - 0 - node C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindArrayPath",1293,G__XmlOdbDict_223_0_8, 85, G__get_linked_tagnum(&G__XmlOdbDictLN_TXMLNode), -1, 0, 4, 1, 1, 0, 
"U 'TXMLNode' - 0 - node C - - 10 - path "
"C - - 10 - type i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("odbReadAny",985,(G__InterfaceMethod) NULL,105, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - name i - - 0 - index "
"i - - 0 - tid Y - - 0 - buf "
"i - - 0 '0' bufsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("odbReadInt",988,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - index "
"i - - 0 - defaultValue", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("odbReadUint32",1206,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("uint32_t"), 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - index "
"h - 'uint32_t' 0 - defaultValue", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("odbReadByte",1093,(G__InterfaceMethod) NULL,98, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - index "
"b - - 0 - defaultValue", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("odbReadBool",1085,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - index "
"g - - 0 - defaultValue", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("odbReadDouble",1292,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - index "
"d - - 0 - defaultValue", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("odbReadFloat",1191,(G__InterfaceMethod) NULL,102, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - index "
"f - - 0 - defaultValue", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("odbReadString",1320,(G__InterfaceMethod) NULL,67, -1, -1, 0, 3, 1, 1, 1, 
"C - - 10 - name i - - 0 - index "
"C - - 10 - defaultValue", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("odbReadArraySize",1611,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__XmlOdbDict_223_0_18, 85, G__get_linked_tagnum(&G__XmlOdbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&XmlOdb::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__XmlOdbDict_223_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&XmlOdb::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__XmlOdbDict_223_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&XmlOdb::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__XmlOdbDict_223_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&XmlOdb::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__XmlOdbDict_223_0_22, 85, G__get_linked_tagnum(&G__XmlOdbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__XmlOdbDict_223_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__XmlOdbDict_223_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__XmlOdbDict_223_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__XmlOdbDict_223_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&XmlOdb::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__XmlOdbDict_223_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&XmlOdb::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__XmlOdbDict_223_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&XmlOdb::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__XmlOdbDict_223_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&XmlOdb::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("XmlOdb", 582, G__XmlOdbDict_223_0_30, (int) ('i'), G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb), -1, 0, 1, 1, 1, 0, "u 'XmlOdb' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~XmlOdb", 708, G__XmlOdbDict_223_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__XmlOdbDict_223_0_32, (int) ('u'), G__get_linked_tagnum(&G__XmlOdbDictLN_XmlOdb), -1, 1, 1, 1, 1, 0, "u 'XmlOdb' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncXmlOdbDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalXmlOdbDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcXmlOdbDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__XmlOdbDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__XmlOdbDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__XmlOdbDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__XmlOdbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__XmlOdbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__XmlOdbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__XmlOdbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__XmlOdbDictLN_TXMLNode = { "TXMLNode" , 99 , -1 };
G__linked_taginfo G__XmlOdbDictLN_TDOMParser = { "TDOMParser" , 99 , -1 };
G__linked_taginfo G__XmlOdbDictLN_VirtualOdb = { "VirtualOdb" , 115 , -1 };
G__linked_taginfo G__XmlOdbDictLN_XmlOdb = { "XmlOdb" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableXmlOdbDict() {
  G__XmlOdbDictLN_TClass.tagnum = -1 ;
  G__XmlOdbDictLN_TBuffer.tagnum = -1 ;
  G__XmlOdbDictLN_TMemberInspector.tagnum = -1 ;
  G__XmlOdbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__XmlOdbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__XmlOdbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__XmlOdbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__XmlOdbDictLN_TXMLNode.tagnum = -1 ;
  G__XmlOdbDictLN_TDOMParser.tagnum = -1 ;
  G__XmlOdbDictLN_VirtualOdb.tagnum = -1 ;
  G__XmlOdbDictLN_XmlOdb.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableXmlOdbDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_TXMLNode);
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_TDOMParser);
   G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_VirtualOdb);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__XmlOdbDictLN_XmlOdb),sizeof(XmlOdb),-1,33792,(char*)NULL,G__setup_memvarXmlOdb,G__setup_memfuncXmlOdb);
}
extern "C" void G__cpp_setupXmlOdbDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupXmlOdbDict()");
  G__set_cpp_environmentXmlOdbDict();
  G__cpp_setup_tagtableXmlOdbDict();

  G__cpp_setup_inheritanceXmlOdbDict();

  G__cpp_setup_typetableXmlOdbDict();

  G__cpp_setup_memvarXmlOdbDict();

  G__cpp_setup_memfuncXmlOdbDict();
  G__cpp_setup_globalXmlOdbDict();
  G__cpp_setup_funcXmlOdbDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncXmlOdbDict();
  return;
}
class G__cpp_setup_initXmlOdbDict {
  public:
    G__cpp_setup_initXmlOdbDict() { G__add_setup_func("XmlOdbDict",(G__incsetup)(&G__cpp_setupXmlOdbDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initXmlOdbDict() { G__remove_setup_func("XmlOdbDict"); }
};
G__cpp_setup_initXmlOdbDict G__cpp_setup_initializerXmlOdbDict;

